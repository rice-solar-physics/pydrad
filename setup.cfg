[metadata]
name = pydrad
author = Will Barnes
author_email = will.t.barnes@gmail.com
license = MIT
license_file = LICENSE
url = https://github.com/rice-solar-physics/pydrad
description = Tools for configuring and parsing HYDRAD simulations.
long_description = file: README.md
long_description_content_type = text/markdown
keywords = hydrodynamics, coronal loop, corona, solar physics, solar, science, sun
classifiers =
  Development Status :: 4 - Beta
  Intended Audience :: Science/Research
  License :: OSI Approved :: MIT License
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    scipy
    matplotlib
    astropy
    Jinja2
    asdf
    h5py
    plasmapy[theory]

[options.extras_require]
test =
    flake8
    GitPython
    pillow
    pytest
    pytest-cov
    codecov
docs =
    sphinx
    sphinx-automodapi
    sphinx-changelog
    sphinx-gallery
    sphinx-book-theme

[options.package_data]
pydrad.configure = templates/*, data/*

[tool:pytest]
testpaths = "pydrad" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
remote_data_strict = False
filterwarnings =
  error

[coverage:run]
omit =
  pydrad/_sunpy_init*
  pydrad/conftest.py
  pydrad/*setup_package*
  pydrad/tests/*
  pydrad/*/tests/*
  pydrad/extern/*
  pydrad/version*
  */pydrad/_sunpy_init*
  */pydrad/conftest.py
  */pydrad/*setup_package*
  */pydrad/tests/*
  */pydrad/*/tests/*
  */pydrad/extern/*
  */pydrad/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_


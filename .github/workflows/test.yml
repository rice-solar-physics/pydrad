name: CI

on:
  push:
    branches:
      - 'main'
      - '*.*'
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      toxdeps: tox-pypi-filter
      envs: |
        - macos: py312
        - windows: py312
        - linux: py310
        - linux: py311
        - linux: py312
        - linux: py313
      coverage: 'codecov'
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  codestyle:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      toxdeps: tox-pypi-filter
      envs: |
        - linux: codestyle
          python-version: '3.11'
  docs:
    needs: [test]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      toxdeps: tox-pypi-filter
      envs: |
        - linux: build_docs
          python-version: '3.12'
  publish:
    # Build wheels when pushing to any branch except main
    # publish.yml will only publish if tagged ^v.*
    if: |
      (
        github.event_name != 'pull_request' && (
          github.ref_name != 'main' ||
          github.event_name == 'workflow_dispatch'
        )
      ) || (
        github.event_name == 'pull_request' &&
        contains(github.event.pull_request.labels.*.name, 'Run publish')
      )
    needs: [test]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@main
    with:
      test_extras: 'dev'
      test_command: 'pytest -p no:warnings --doctest-rst --pyargs pydrad'
      submodules: false
      python-version: '3.12'
    secrets:
      pypi_token: ${{ secrets.PYPI_TOKEN }}

  windows_cygwin_test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Cygwin with gcc, g++, make, python3.12
        shell: pwsh
        run: |
          curl -L -o setup-x86_64.exe https://cygwin.com/setup-x86_64.exe
          Start-Process -Wait -FilePath ./setup-x86_64.exe -ArgumentList `
            "-qn", `
            "-R", "C:\cygwin64", `
            "-s", "http://cygwin.mirror.constant.com", `
            "-P", "gcc-g++,make,python312,python312-pip,python312-setuptools"
          if (-Not (Test-Path "C:\cygwin64\bin\bash.exe")) {
            throw "Cygwin install failed â€” bash.exe not found"
          }

      - name: Verify Python and GCC inside Cygwin
        shell: pwsh
        run: |
          & "C:\cygwin64\bin\bash.exe" -lc `
            "which python3 && \
             python3 --version && \
             g++ --version"

      - name: Install Python dependencies
        shell: pwsh
        run: |
          & "C:\cygwin64\bin\bash.exe" -lc `
            "cd \"$(cygpath -u '${{ github.workspace }}')\" && \
             python3 -m pip install --upgrade pip && \
             pip install -e ."

      - name: Run tests with pytest
        shell: pwsh
        run: |
          & "C:\cygwin64\bin\bash.exe" -lc `
            "cd \"$(cygpath -u '${{ github.workspace }}')\" && \
             pytest"
